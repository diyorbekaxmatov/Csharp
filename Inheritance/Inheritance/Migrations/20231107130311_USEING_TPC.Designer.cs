// <auto-generated />
using Inheritance;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Inheritance.Migrations
{
    [DbContext(typeof(DatabaseDbContext))]
    [Migration("20231107130311_USEING_TPC")]
    partial class USEING_TPC
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.HasSequence("ProductSequence");

            modelBuilder.Entity("Inheritance.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("NEXT VALUE FOR [ProductSequence]");

                    SqlServerPropertyBuilderExtensions.UseSequence(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ValidityTime")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable((string)null);

                    b.UseTpcMappingStrategy();
                });

            modelBuilder.Entity("Inheritance.Models.Fruits", b =>
                {
                    b.HasBaseType("Inheritance.Models.Product");

                    b.Property<double>("SaveTemperature")
                        .HasColumnType("float");

                    b.ToTable("Fruits");
                });

            modelBuilder.Entity("Inheritance.Models.Waters", b =>
                {
                    b.HasBaseType("Inheritance.Models.Product");

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.ToTable((string)null);
                });

            modelBuilder.Entity("Inheritance.Models.CarbonatedWater", b =>
                {
                    b.HasBaseType("Inheritance.Models.Waters");

                    b.Property<double>("Carbonate")
                        .HasColumnType("float");

                    b.ToTable("CarbonatedWater");
                });

            modelBuilder.Entity("Inheritance.Models.StillWater", b =>
                {
                    b.HasBaseType("Inheritance.Models.Waters");

                    b.Property<double>("SaveTemprature")
                        .HasColumnType("float");

                    b.ToTable("StillWater");
                });
#pragma warning restore 612, 618
        }
    }
}
